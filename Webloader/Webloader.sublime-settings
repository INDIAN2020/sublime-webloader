{
	// The host and port the server listens to.
	// If you change this, change the js script too: 'webloader.js?server=host:port'
	// Then reload the plugin (restart Sublime), and your page.

	"host": "localhost", 
	"port": 9000, 


	// Defines what types of files should be watched, and what should happen at events.

	// By default, open/close/save events reload the file on the page, running js, 
	// resetting css, and re-parsing less files. Edit events send updates while typing,
	// these are only supported for less/css currently.

	// No need to change these settings if you only want to watch js/css/less changes.

	"watch_events": {
		// These are watched by default.
		"less": ["edit", "open", "close", "save"], 
		"css": ["edit", "open", "close", "save"], 
		"js": ["save"], 

		// These only work if you enable them in the client_watchlist setting below.
		"html": ["save"], 
		"py": ["close", "save"], 
		"php": ["close", "save"], 

		// You can also add more file extensions.
		// "some_extension": ["save"], 

		// Or redefine actions (run the page_reload after saving .html files).
		"html": [["save", "page_reload"]], 
		"html": [["save", "page_reload", "other_command"]], 

		// Or add custom actions to the js client (see the readme).
		// "html": [["open", "my_js_command"]], 

		// Because you will inevitably forget it.
		"the_trailing_comma_holder": []
	}, 


	// By default, html/py/php changes are not sent to clients, unless you allow this.
	// If you don't mind, ignore this setting. If you use virthosts though, read on.

	"client_watchlist": {

		// Simplest mode:
		// "*": '', // Means: every webloader-using page should refresh when you save.

		// You should uncomment the above line and ignore the rest, if either:
		// - you only work on a single project at once, with a few open pages
		// - or your file paths match to the urls, like these:
		//   /home/www/project/x.html     -> localhost/project/x.html?y=1
		//   /home/www/project/index.html -> localhost/project/?y=1
		//   /home/www/another/a/b.php    -> localhost/another/a/b.php#c


		// With proper paths:
		// "/your/docroot/myproject": "/myproject", 

		// Defines how a folder matches to page urls. If you uncomment the above,
		// saved files in /your/docroot/myproject/* will refresh any active page
		// under /myproject/.
		// Protip: see your EXACT file paths in the Sublime window title.
		// Another: you can use '/' on every platform. '\\'' is silly.


		// For virthosts: docroot/localvirthost/ -> localvirthost.com/
		// "/your/docroot/localvirthost*": "/", 
		// "/your/docroot/localvirthost*": "/same/page/url", 
		// "/your/docroot/differenthost*": "/same/page/url", 


		// More examples (you can define several):

		// Localhost: if docroot/myproject is sitting on http://localhost/project/
		// "/your/docroot/myproject": "/myproject/some/page", 
		// "C:\\your\\docroot\\myproject": "/myproject/some/page", 
		// Only for certain folder and urls:



		// How to link a directory with an url path; changes to files under this directory 
		// will be sent to matching pages like this: /your/docroot/* -> /some/page/*
		// (The Sublime window title shows the exact file paths.)
		// "/your/docroot/myproject": "/some/page", 


		// Long explanation:

		// The plugin identifies pages by their path, files by their full filepath:
		//   domain.com/some/page/index.html           ->  /some/page
		//   domain.com/some/page/media/my.less        ->  /some/page/media/my.less
		// And Sublime sees paths like this:
		//     /your/docroot/myproject/some/page/media/my.less
		//   C:\your\docroot\myproject\some\page\media\my.less

		// It's easy matching files to pages if we define "where to root url starts".
		// 
		// When you edit or save my.less, it matches the full path, so any open page using 
		// webloader.js and my.less can get these changes.

		// But often you have a much more complicated environment, path structures, virthosts,
		// aliases, several pages running from various projects, etc.
		// See the examples below to link your project folder with the website's path.


	}, 


	// Things you shouldn't need to care about, unless you want to mess around.

	"init_server_delay": 1, // start server x sec after startup (0 = only when needed)
	"logfile": "webloader.log", // path relative to plugin folder
	"console_log": 0, // should also log to the console
	"message_prefix": "[Webloader] ", // console message prefix
	"debug_level": 1, 
	"more": "..."
}